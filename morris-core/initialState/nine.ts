// Initial state graph just defines adjacency. occupancy is omitted as there are no pieces to start

import { GameState, Mill, StateGraph } from "../types";

// This state graph represents the adjacency for 6 man morris (2 rings)
const initialStateGraph: StateGraph = {
  // inner ring
  a: { neighbors: ["b", "h"] },
  b: { neighbors: ["a", "c", "j"] },
  c: { neighbors: ["b", "d"] },
  d: { neighbors: ["c", "e", "l"] },
  e: { neighbors: ["d", "f"] },
  f: { neighbors: ["e", "g", "n"] },
  g: { neighbors: ["f", "h"] },
  h: { neighbors: ["g", "a", "p"] },

  // outer ring
  i: { neighbors: ["j", "p"] },
  j: { neighbors: ["i", "k", "b", "r"] },
  k: { neighbors: ["j", "l"] },
  l: { neighbors: ["k", "m", "d", "t"] },
  m: { neighbors: ["l", "n"] },
  n: { neighbors: ["m", "o", "f", "v"] },
  o: { neighbors: ["n", "p"] },
  p: { neighbors: ["o", "i", "h", "x"] },

  // final ring
  q: { neighbors: ["r", "x"] },
  r: { neighbors: ["q", "s", "j"] },
  s: { neighbors: ["r", "t"] },
  t: { neighbors: ["s", "u", "l"] },
  u: { neighbors: ["t", "v"] },
  v: { neighbors: ["u", "w", "n"] },
  w: { neighbors: ["v", "x"] },
  x: { neighbors: ["w", "q", "p"] }
};

// These represent the "lines" which a mill must be formed on. They could be autogenerated with a simple formula
// The advantage of storing this separately from the state graph is that it gives us flexibility in what makes a mill line.
const initialMills: Mill[] = [
  // inner ring
  { points: ["a", "b", "c"] },
  { points: ["c", "d", "e"] },
  { points: ["e", "f", "g"] },
  { points: ["g", "h", "a"] },

  // outer ring
  { points: ["i", "j", "k"] },
  { points: ["k", "l", "m"] },
  { points: ["m", "n", "o"] },
  { points: ["o", "p", "i"] },

  // final ring
  { points: ["q", "r", "s"] },
  { points: ["s", "t", "u"] },
  { points: ["u", "v", "w"] },
  { points: ["w", "x", "q"] },

  // inter ring
  { points: ["b", "j", "r"] },
  { points: ["d", "l", "t"] },
  { points: ["f", "n", "v"] },
  { points: ["h", "p", "x"] }
];

/**
 * Initial state of the game for 9 man morris
 */
export const initialStateNine: GameState = {
  phase: 1,
  turn: { count: 0, player: "a", type: "regular" },
  stateGraph: initialStateGraph,
  remainingMen: { a: 9, b: 9 },
  mills: initialMills,
  winner: undefined,
  nextMoves: Object.keys(initialStateGraph)
};
